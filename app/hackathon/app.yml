apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: myapp-backend-config
spec:
  timeoutSec: 720000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: web-pods-service-account
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
    spec:
      serviceAccountName: web-pods-service-account
      containers:
        - name: web-app
          image: asia-northeast1-docker.pkg.dev/handson-446606/app/web:0.05
          env:
            - name: REDIS_URL
              value: "redis://redis-service:6379"
            - name: GOOGLE_CLOUD_PROJECT_ID
              value: handson-446606
            - name: GOOGLE_CLOUD_LOCATION
              value: us-central1
            - name: BASIC_AUTH_USER
              valueFrom:
                secretKeyRef:
                  name: basic
                  key: username
            - name: BASIC_AUTH_PWD
              valueFrom:
                secretKeyRef:
                  name: basic
                  key: password
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: web-app-service
  annotations:
    cloud.google.com/backend-config: '{"default": "myapp-backend-config"}'
spec:
  type: ClusterIP
  selector:
    app: web-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-app-ingress
spec:
  rules:
    - http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: web-app-service
                port:
                  number: 80
